// <auto-generated />
using System;
using LogisticsMS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogisticsMS.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20230523111856_AddRFS")]
    partial class AddRFS
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogisticsMS.Models.ContainerCargo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CargoPrices")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("货物价格");

                    b.Property<string>("ConsigneeAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("收货人地址");

                    b.Property<string>("ConsigneeEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("收货人邮箱");

                    b.Property<string>("ConsigneeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("收货人名字");

                    b.Property<string>("ConsigneePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("收货人电话");

                    b.Property<string>("ContainersClsoeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("施封号码");

                    b.Property<string>("ContainersCost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("运输费用");

                    b.Property<string>("ContainersMany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("集装箱数量");

                    b.Property<string>("ContainersNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("集装箱号码");

                    b.Property<string>("ContainersType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("集装箱类型");

                    b.Property<string>("End")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("收货点");

                    b.Property<string>("EndCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("收货城市");

                    b.Property<byte[]>("OtherFile")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("其它附件");

                    b.Property<string>("ShipmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("运货名称");

                    b.Property<string>("ShipperAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("托运人地址");

                    b.Property<string>("ShipperEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("托运人邮箱");

                    b.Property<string>("ShipperPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("托运人电话");

                    b.Property<string>("ShippersName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("托运人名字");

                    b.Property<string>("ShippersRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("托用人记载");

                    b.Property<string>("Start")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("发货点");

                    b.Property<string>("StartCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("发货城市");

                    b.Property<string>("TransportersRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("运输员备注");

                    b.HasKey("Id");

                    b.ToTable("ContainerCargo");
                });

            modelBuilder.Entity("LogisticsMS.Models.ReimbursementForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("金额");

                    b.Property<string>("ApproverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("审查人名字");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("申请时间");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("申报人姓名");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("事由");

                    b.Property<int>("stage")
                        .HasColumnType("int")
                        .HasColumnName("状态");

                    b.HasKey("Id");

                    b.ToTable("ReimbursementForm");
                });

            modelBuilder.Entity("LogisticsMS.Models.ShippingOrders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CarNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("车牌号");

                    b.Property<string>("CarType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("汽车类型");

                    b.Property<Guid>("ContainerCargoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("送货单id");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("送货时间");

                    b.Property<string>("DeliveryPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("送货人名字");

                    b.Property<string>("DeliveryPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("送货人的电话号码");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int")
                        .HasColumnName("送货人Id");

                    b.Property<int>("state")
                        .HasColumnType("int")
                        .HasColumnName("订单状态");

                    b.HasKey("Id");

                    b.HasIndex("ContainerCargoId");

                    b.ToTable("ShippingOrders");
                });

            modelBuilder.Entity("LogisticsMS.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("邮箱");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("姓名");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("电话号码");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("用户角色");

                    b.Property<string>("account")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("账号");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("密码");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("LogisticsMS.Models.ShippingOrders", b =>
                {
                    b.HasOne("LogisticsMS.Models.ContainerCargo", "ContainerCargo")
                        .WithMany()
                        .HasForeignKey("ContainerCargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContainerCargo");
                });
#pragma warning restore 612, 618
        }
    }
}
